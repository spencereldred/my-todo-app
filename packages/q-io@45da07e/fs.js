function dampen(e,t){var n=function(){var i=arguments,r=backOffDelay?Q.delay(backOffDelay):Q.resolve();return r.then(function(){return Q.when(e.apply(t,i),function(e){return backOffDelay=Math.max(0,backOffDelay-1),e},function(e){if("EMFILE"===e.code)return backOffDelay=(backOffDelay+1)*backOffFactor,n.apply(null,i);throw e})})};return n}var FS=require("fs"),Q=require("q"),Reader=require("./reader"),Writer=require("./writer"),Common=require("./fs-common"),Mock=require("./fs-mock"),Root=require("./fs-root");Common.update(exports,process.cwd),exports.Mock=Mock,exports.Root=Root;var backOffDelay=0,backOffFactor=1.0001;exports.open=dampen(function(e,t,n,i){"object"==typeof t&&(i=t,t=i.flags,n=i.charset),i=i||{},t=t||"r";var r=t.replace(/b/g,"")||"r",a={flags:r};if("bufferSize"in i&&(a.bufferSize=i.bufferSize),"mode"in i&&(a.mode=i.mode),"begin"in i&&(a.start=i.begin,a.end=i.end-1),t.indexOf("b")>=0){if(n)throw Error("Can't open a binary file with a charset: "+n)}else n=n||"utf-8";if(t.indexOf("w")>=0||t.indexOf("a")>=0){var s=FS.createWriteStream(e+"",a);return Writer(s,n)}var s=FS.createReadStream(e+"",a);return Reader(s,n)}),exports.remove=function(e){e+="";var t=Q.defer();return FS.unlink(e,function(n){n?(n.message="Can't remove "+JSON.stringify(e)+": "+n.message,t.reject(n)):t.resolve()}),t.promise},exports.rename=function(e,t){return e+="",t+="",Q.ninvoke(FS,"rename",e,t).fail(function(n){throw"EXDEV"===n.code&&(n.message="source and target are on different devices: "+n.message,n.crossDevice=!0),n.message="Can't move "+JSON.stringify(e)+" to "+JSON.stringify(t)+" because "+n.message,n})},exports.makeDirectory=function(e,t){e+="";var n=Q.defer();return"string"==typeof t?t=parseInt(t,8):void 0===t&&(t=parseInt("755",8)),FS.mkdir(e,t,function(i){i?("EISDIR"===i.code&&(i.exists=!0,i.isDirectory=!0,i.message="directory already exists: "+i.message),"EEXIST"===i.code&&(i.exists=!0,i.message="file exists at that path: "+i.message),i.message="Can't makeDirectory "+JSON.stringify(e)+" with mode "+t+": "+i.message,n.reject(i)):n.resolve()}),n.promise},exports.removeDirectory=function(e){e+="";var t=Q.defer();return FS.rmdir(e,function(n){n?(n.message="Can't removeDirectory "+JSON.stringify(e)+": "+n.message,t.reject(n)):t.resolve()}),t.promise},exports.list=dampen(function(e){e+="";var t=Q.defer();return FS.readdir(e,function(n,i){return n?(n.message="Can't list "+JSON.stringify(e)+": "+n.message,t.reject(n)):(t.resolve(i),void 0)}),t.promise}),exports.stat=function(e){var t=this;e+="";var n=Q.defer();try{FS.stat(e,function(i,r){i?(i.message="Can't stat "+JSON.stringify(e)+": "+i,n.reject(i)):n.resolve(new t.Stats(r))})}catch(i){n.reject(i)}return n.promise},exports.statLink=function(e){e+="";var t=Q.defer();try{FS.lstat(e,function(n,i){n?(n.message="Can't statLink "+JSON.stringify(e)+": "+n.message,t.reject(n)):t.resolve(i)})}catch(n){t.reject(n)}return t.promise},exports.statFd=function(e){e=Number(e);var t=Q.defer();try{FS.fstat(e,function(n,i){n?(n.message="Can't statFd file descriptor "+JSON.stringify(e)+": "+n.message,t.reject(n)):t.resolve(i)})}catch(n){t.reject(n)}return t.promise},exports.link=function(e,t){e+="",t+="";var n=Q.defer();try{FS.link(e,t,function(i){i?(i.message="Can't link "+JSON.stringify(e)+" to "+JSON.stringify(t)+": "+i.message,n.reject(i)):n.resolve()})}catch(i){n.reject(i)}return n.promise};var linkTypes={file:"file",directory:"dir",junction:"junction"};exports.symbolicLink=function(e,t,n){linkTypes.hasOwnProperty(n)||console.warn(Error('For Windows compatibility, symbolicLink must be called with a type argument "file", "directory", or "junction"')),n=linkTypes[n],e+="",t+="";var i=Q.defer();try{FS.symlink(t,e,n||"file",function(n){n?(n.message="Can't create symbolicLink "+JSON.stringify(e)+" to relative location "+JSON.stringify(t)+": "+n.message,i.reject(n)):i.resolve()})}catch(r){i.reject(r)}return i.promise},exports.chown=function(e,t,n){e+="";var i=Q.defer();try{FS.chown(e,t,n,function(r){r?(r.message="Can't chown (change owner) of "+JSON.stringify(e)+" to user "+JSON.stringify(t)+" and group "+JSON.stringify(n)+": "+r.message,i.reject(r)):i.resolve()})}catch(r){i.reject(r)}return i.promise},exports.chmod=function(e,t){e+="",t+="";var n=Q.defer();try{FS.chmod(e,t,function(i){i?(i.message="Can't chmod (change permissions mode) of "+JSON.stringify(e)+" to (octal number) "+t.toString(8)+": "+i.message,n.reject(i)):n.resolve()})}catch(i){n.reject(i)}return n.promise},exports.canonical=function(e){var t=Q.defer();return FS.realpath(e,function(n,i){n?(n.message="Can't get canonical path of "+JSON.stringify(e)+" by way of C realpath: "+n.message,t.reject(n)):t.resolve(i)}),t.promise},exports.readLink=function(e){var t=Q.defer();return FS.readlink(e,function(e,n){e?(e.message="Can't get link from "+JSON.stringify(n)+" by way of C readlink: "+e.message,t.reject(e)):t.resolve(n)}),t.promise},exports.mock=function(e){return Mock.mock(this,e)};